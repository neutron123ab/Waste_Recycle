"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.compileSwift = exports.parseSwiftPackage = exports.createSwiftResolveTypeReferenceName = void 0;
const uni_cli_shared_1 = require("@dcloudio/uni-cli-shared");
const shared_1 = require("@vue/shared");
const utils_1 = require("./utils");
function resolveTypeAliasDeclNames(items) {
    const names = [];
    items.forEach((item) => {
        if (item.type === 'TsTypeAliasDeclaration') {
            names.push(item.id.value);
        }
    });
    return names;
}
function createSwiftResolveTypeReferenceName(namespace, ast) {
    const names = resolveTypeAliasDeclNames(ast.body);
    return (name) => {
        if (names.includes(name)) {
            return namespace + (0, shared_1.capitalize)(name);
        }
        return name;
    };
}
exports.createSwiftResolveTypeReferenceName = createSwiftResolveTypeReferenceName;
function parseSwiftPackage(filename) {
    const res = (0, utils_1.resolvePackage)(filename);
    if (!res) {
        return {
            package: '',
            namespace: '',
            class: '',
        };
    }
    const namespace = 'UTSSDK' + (res.is_uni_modules ? 'Modules' : '') + (0, shared_1.capitalize)(res.name);
    return {
        package: '',
        namespace,
        class: namespace + 'IndexSwift',
    };
}
exports.parseSwiftPackage = parseSwiftPackage;
async function compileSwift(filename) {
    // 开发阶段不编译
    if (process.env.NODE_ENV !== 'production') {
        return;
    }
    if (!process.env.UNI_HBUILDERX_PLUGINS) {
        return;
    }
    const { bundle, UtsTarget } = (0, utils_1.getUtsCompiler)();
    const inputDir = process.env.UNI_INPUT_DIR;
    const outputDir = process.env.UNI_OUTPUT_DIR;
    // let time = Date.now()
    await bundle(UtsTarget.SWIFT, {
        input: {
            root: inputDir,
            filename,
        },
        output: {
            isPlugin: true,
            outDir: outputDir,
            package: parseSwiftPackage(filename).namespace,
            sourceMap: (0, uni_cli_shared_1.resolveSourceMapPath)(),
            extname: 'swift',
            imports: ['DCUTSPlugin'],
            logFilename: true,
            noColor: (0, uni_cli_shared_1.isInHBuilderX)(),
        },
    });
    (0, utils_1.genUTSPlatformResource)(filename, {
        inputDir,
        outputDir,
        platform: 'app-ios',
        extname: '.swift',
    });
}
exports.compileSwift = compileSwift;
